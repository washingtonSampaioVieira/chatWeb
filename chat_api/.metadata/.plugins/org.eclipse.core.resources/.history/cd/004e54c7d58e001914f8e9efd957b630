package chat.api.resource;

import java.net.URI;
import java.util.List;

import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

import chat.api.model.Usuario;
import chat.api.repository.UsuarioRepository;

@RestController
@RequestMapping("/chat/usuarios")
public class UsuarioResource {
	@Autowired
	private UsuarioRepository usuarioRepository;
	
	@GetMapping
	private List<Usuario> getUsuarios(){
		return usuarioRepository.findAll();
	}
	
	@GetMapping("/login/{nome}/{senha}")
	private Usuario logarUsuario(@PathVariable String nome, @PathVariable String senha) {
		
		Usuario usuario = usuarioRepository.login(nome, senha);
		
		if(usuario == null) {
			return null;
		}else {
			return usuario;
		}
		
	}
	
	@PostMapping
	private ResponseEntity<Usuario> setUsuario(@RequestBody Usuario usuario, 
			HttpServletResponse response){
		Usuario usuarioSalvo = usuarioRepository.save(usuario);
		
		URI uri = ServletUriComponentsBuilder
				.fromCurrentRequestUri()
				.path("/{id}").buildAndExpand(usuario.getCodUsuario())
				.toUri();
		response.addHeader("Location", uri.toASCIIString());
		
		return ResponseEntity.ok(usuarioSalvo);
	}
	
}
